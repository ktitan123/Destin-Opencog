
JavaDestin is a Java JNI interface to CudaDestin generated using SWIG (http://www.swig.org/Doc2.0/ ). 
SWIG can also generate wrappers for lots of other languages as well, including Octave (Matlab clone) and python.


---PREQUISITES---
*Swig >= 2.0.4 is needed (other 2.x versions might work as well). On Ubuntu 11.10 and probably later try installing the swig2.0 package from synaptic. Alternativly build from sources from http://prdownloads.sourceforge.net/swig/swig-2.0.4.tar.gz and install using its make file. It needs the package libpcre3-dev (Perl Compativle Regular Expressions). 

*Ant (http://ant.apache.org/) is also needed. My version of ant is 1.8.2-3, your luck may vary with other versions. Try installing in from synaptic first.

*Java SDK
Right how this has only been tested on Ubuntu 10.10 64bit with 
java version "1.6.0_24"
Java(TM) SE Runtime Environment (build 1.6.0_24-b07)
Java HotSpot(TM) 64-Bit Server VM (build 19.1-b02, mixed mode)

Using the Sun SDK. I ran into issues while using the OpenJDK version while building with ant ( though the default-jdk package listed on Ubuntu 11.10 works ). On ubuntu look for the "sun-java6-jdk" package to install. 
Then you'll probably need to set it as the default JDK by running 

sudo update-alternatives --config java

or you might get compile errors like
"/home/ted/oc/destin/src/DestinCuda/JavaDestin/nbproject/build-impl.xml:272: Unable to find a javac compiler;
com.sun.tools.javac.Main is not on the classpath.
Perhaps JAVA_HOME does not point to the JDK.
"

The the ant build file build.xml located in DestinCuda/JavaDestin was generated by a netbeans 7.1.2 project (but it shouldn't be require to build or run).

*OpenCV (Open Computer Vision) - I'm using its highgui library to access videos and webcam stream. Install libhighgui-dev 2.1.0 and any dependencies using synaptic.
Or from command line try:
sudo apt-get install libhighgui-dev
Which should install the following dependencies: libcv2.1 (2.1.0-2) libhighgui2.1 (2.1.0-2) libhighgui-dev (2.1.0-2) libcv-dev (2.1.0-2) 


---BUILDING and RUNNING---

After installing the prerequisites, to build:

cd opencog/embodiment/DestinCudaAlt
cmake . 
make

cd ../DestinCuda
cmake . 
make
./java_build.sh

Plug in a webcam then:
./java_run.sh

Note: CMAKE with SWIG is not so great at detecting source code changes, so try "make clean" and remove CMakeCache.txt and run cmake again then ./build_java.sh if you run into compile errors after updating code.

Your webcam video should popup in a window. The console output will show a simple bar graph of the beliefs of the top node of the DeSTIN network (with 2 centroids) updated at about 5 frames/ second.

